## Control flow ###
snippet forin
	for (var ${1:variable} in ${2:sequence}) {
		if ($2.hasOwnProperty($1)) {
			${3}
		}
	}
snippet forof
	for (const ${1:elem} of ${2:sequence}) {
		${3}
	}
snippet if
	if (${1:condition}) {
		${2}
	}
snippet elif
	else if (${1:condition}) {
		${2}
	}
snippet else
	else {
		${1}
	}
snippet switch
	switch (${1:var}) {
	${2}
	}
snippet case
	case ${1:val}:
		${2}
	break;
snippet while
	while (${1:condition}) {
		${2}
	}
snippet for
	for (let ${1:index} = 0; $1 < ${2:len}; ++$2) {
		${3}
	}
snippet try
	try {
		${1}
	} catch(err) {

	}
## jQuery ##
snippet ready
	$(function() {
		${1}
	});
snippet module
	function ${1:Module}() {
		"use strict";

		var module = $1;
	}

	$1();
## Other ##
snippet log
	console.log(${1});
snippet /**
	/**
	 * ${1}
	 */
snippet =>
	(${1}) => $2
snippet {
	{
		${0}
	}
snippet (
	{${0}
	)
snippet describe
	describe('${1:Thing}', () => {
		${0}
	})
snippet it
	it('should ${1:message}', () => {
		${0}
	})
snippet beforeEach
	beforeEach(() => {
		${0}
	})
snippet provide
	beforeEach(angular.mock.module($provide => {
		${0}
	}))
snippet has
	if (${1:object}.hasOwnProperty(${2:key})) {
		continue;
	}${3}
snippet func
	function${1}() {
		${2}
	};
snippet use
	'use strict'
